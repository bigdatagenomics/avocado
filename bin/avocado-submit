#!/usr/bin/env bash
#
# Licensed to Big Data Genomics (BDG) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The BDG licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -e

# Split args into Spark and ADAM args
DD=False  # DD is "double dash"
PRE_DD=()
POST_DD=()
for ARG in "$@"; do
  shift
  if [[ $ARG == "--" ]]; then
    DD=True
    POST_DD=( "$@" )
    break
  fi
  PRE_DD+=("$ARG")
done

if [[ $DD == True ]]; then
  SPARK_ARGS="${PRE_DD[@]}"
  AVOCADO_ARGS=("${POST_DD[@]}")
else
  SPARK_ARGS=()
  AVOCADO_ARGS=(${PRE_DD[@]})
fi

# does the user have AVOCADO_OPTS set? if yes, then warn
if [[ $DD == False && -n "$AVOCADO_OPTS" ]]; then
    echo "WARNING: Passing Spark arguments via AVOCADO_OPTS was recently removed."
    echo "Run avocado-submit instead as avocado-submit <spark-args> -- <avocado-args>"
fi

# Figure out where AVOCADO is installed
AVOCADO_REPO="$(cd `dirname $0`/..; pwd)"

CLASSPATH=$("$AVOCADO_REPO"/bin/compute-avocado-classpath.sh)
AVOCADO_JARS=$("$AVOCADO_REPO"/bin/compute-avocado-jars.sh)

# Split out the CLI jar, since it will be passed to Spark as the "primary resource".
AVOCADO_CLI_JAR=${AVOCADO_JARS##*,}
AVOCADO_JARS=$(echo "$AVOCADO_JARS" | rev | cut -d',' -f2- | rev)

# do we have >= 4 arguments? if so, magic!!!!!!!
if [ ${#AVOCADO_ARGS[@]} -ge 4 ]; then
    # make a temp directory
    TEMP_DIR=$(mktemp -d -t "avocado.properties.XXXXXXXX")
    DIR_ID=${TEMP_DIR##*.}

    # copy property file over
    cp ${AVOCADO_ARGS[3]} "${TEMP_DIR}/${DIR_ID}.properties"

    # make jar
    jar cf "${TEMP_DIR}/${DIR_ID}.jar" -C ${TEMP_DIR} ${DIR_ID}.properties
    cp "${TEMP_DIR}/${DIR_ID}.jar" .

    # add jar to classpath
    AVOCADO_JARS="${AVOCADO_JARS},${TEMP_DIR}/${DIR_ID}.jar"

    # modify arguments
    AVOCADO_ARGS[3]="${DIR_ID}.properties"
fi

# Find spark-submit script
if [ -z "$SPARK_HOME" ]; then
  SPARK_SUBMIT=$(which spark-submit)
else
  SPARK_SUBMIT="$SPARK_HOME"/bin/spark-submit
fi
if [ -z "$SPARK_SUBMIT" ]; then
  echo "SPARK_HOME not set and spark-submit not on PATH; Aborting."
  exit 1
fi
echo "Using SPARK_SUBMIT=$SPARK_SUBMIT"

# submit the job to Spark
"$SPARK_SUBMIT" \
  --class org.bdgenomics.avocado.cli.Avocado \
  --conf spark.serializer=org.apache.spark.serializer.KryoSerializer \
  --conf spark.kryo.registrator=org.bdgenomics.adam.serialization.ADAMKryoRegistrator \
  $SPARK_ARGS \
  --jars $AVOCADO_JARS \
  $AVOCADO_CLI_JAR \
  ${AVOCADO_ARGS[@]}
